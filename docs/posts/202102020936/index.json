



    
        
    




{
  "result": {
    "content": "\u003cp\u003e使用command line操作7-Zip壓縮檔案，工作上可能會用到所以紀錄一下\u003c/p\u003e\n\u003cp\u003e接下來用PowerShell操作，安裝使用預設目錄，使用call operator \u003ccode\u003e'\u0026amp;'\u003c/code\u003e來呼叫7z.exe\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecd C:\\Program Files\\7-Zip\n\u0026amp; '.\\7z.exe'\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e可以得到落落長的result，主要是command的介紹\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e7-Zip 18.01 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2018-01-28\n\nUsage: 7z \u0026lt;command\u0026gt; [\u0026lt;switches\u0026gt;...] \u0026lt;archive_name\u0026gt; [\u0026lt;file_names\u0026gt;...]\n\n\u0026lt;Commands\u0026gt;\n  a : Add files to archive\n  b : Benchmark\n  d : Delete files from archive\n  e : Extract files from archive (without using directory names)\n  h : Calculate hash values for files\n  i : Show information about supported formats\n  l : List contents of archive\n  rn : Rename files in archive\n  t : Test integrity of archive\n  u : Update files to archive\n  x : eXtract files with full paths\n\n\u0026lt;Switches\u0026gt;\n  -- : Stop switches parsing\n  @listfile : set path to listfile that contains file names\n  -ai[r[-|0]]{@listfile|!wildcard} : Include archives\n  -ax[r[-|0]]{@listfile|!wildcard} : eXclude archives\n  -ao{a|s|t|u} : set Overwrite mode\n  -an : disable archive_name field\n  -bb[0-3] : set output log level\n  -bd : disable progress indicator\n  -bs{o|e|p}{0|1|2} : set output stream for output/error/progress line\n  -bt : show execution time statistics\n  -i[r[-|0]]{@listfile|!wildcard} : Include filenames\n  -m{Parameters} : set compression Method\n    -mmt[N] : set number of CPU threads\n    -mx[N] : set compression level: -mx1 (fastest) ... -mx9 (ultra)\n  -o{Directory} : set Output directory\n  -p{Password} : set Password\n  -r[-|0] : Recurse subdirectories\n  -sa{a|e|s} : set Archive name mode\n  -scc{UTF-8|WIN|DOS} : set charset for for console input/output\n  -scs{UTF-8|UTF-16LE|UTF-16BE|WIN|DOS|{id}} : set charset for list files\n  -scrc[CRC32|CRC64|SHA1|SHA256|*] : set hash function for x, e, h commands\n  -sdel : delete files after compression\n  -seml[.] : send archive by email\n  -sfx[{name}] : Create SFX archive\n  -si[{name}] : read data from stdin\n  -slp : set Large Pages mode\n  -slt : show technical information for l (List) command\n  -snh : store hard links as links\n  -snl : store symbolic links as links\n  -sni : store NT security information\n  -sns[-] : store NTFS alternate streams\n  -so : write data to stdout\n  -spd : disable wildcard matching for file names\n  -spe : eliminate duplication of root folder for extract command\n  -spf : use fully qualified file paths\n  -ssc[-] : set sensitive case mode\n  -sse : stop archive creating, if it can't open some input file\n  -ssw : compress shared files\n  -stl : set archive timestamp from the most recently modified file\n  -stm{HexMask} : set CPU thread affinity mask (hexadecimal number)\n  -stx{Type} : exclude archive type\n  -t{Type} : Set type of archive\n  -u[-][p#][q#][r#][x#][y#][z#][!newArchiveName] : Update options\n  -v{Size}[b|k|m|g] : Create volumes\n  -w[{path}] : assign Work directory. Empty path means a temporary directory\n  -x[r[-|0]]{@listfile|!wildcard} : eXclude filenames\n  -y : assume Yes on all queries\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e接下來就稍微列一些常用範例\u003c/p\u003e\n\u003cp\u003e將複數目錄或檔案以zip壓縮輸出成result.zip\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026amp; '.\\7z.exe' a -tzip 'result.zip' 'dir1' 'dir2'\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e也能使用其他format，詳細可以使用\u003ccode\u003e\u0026amp; '.\\7z.exe' i\u003c/code\u003e看支援列表\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026amp; '.\\7z.exe' a -t7z 'result.7z' 'dir1' 'dir2'\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e如果沒有目標檔案的話，會create新的\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ePS C:\\Program Files\\7-Zip\u0026gt; \u0026amp; '.\\7z.exe' a -tzip 'result.zip' 'dir1' 'dir2'\n\n...\nCreating archive: C:\\Program Files\\7-Zip\\result.zip\n...\nAdd new data to archive: 2 folders, 0 file, 0 bytes\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e如果已存在，會open \u0026amp; update，舊的會保存下來\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ePS C:\\Program Files\\7-Zip\u0026gt; \u0026amp; '.\\7z.exe' a -tzip 'result.zip' 'file1'\n\n...\nOpen archive: C:\\Program Files\\7-Zip\\result.zip\n...\nUpdating archive: C:\\Program Files\\7-Zip\\result.zip\n...\nKeep old data in archive: 2 folders, 0 file, 0 bytes\nAdd new data to archive: 1 file, 0 bytes\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e如果archive內的檔案重複，使用u的話就不會覆蓋掉裡面的檔案\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ePS C:\\Program Files\\7-Zip\u0026gt; \u0026amp; '.\\7z.exe' u -tzip 'result.zip' 'file1'\n\n...\nOpen archive: C:\\Program Files\\7-Zip\\result.zip\n...\nUpdating archive: C:\\Program Files\\7-Zip\\result.zip\n...\nKeep old data in archive: 2 folders, 1 file, 0 bytes\nAdd new data to archive: 0 file, 0 bytes\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e密碼的話是針對file，而不是archive本身，像以下範例僅file1受到密碼保護\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026amp; '.\\7z.exe' a -tzip 'result.zip' 'file1' -p123\n\u0026amp; '.\\7z.exe' u -tzip 'result.zip' 'file2'\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e如果使用7z的話，可支援-mhe，這樣整個archive都會加上密碼\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026amp; '.\\7z.exe' a -t7z 'result.7z' 'file1' -p123 -mhe\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003eadd/update與excract都需要密碼，而即使add/update時不加-p，整個archive也是受密碼保護的\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026amp; '.\\7z.exe' a -t7z 'result.7z' 'file1' -p123 -mhe\n\n...\nOpen archive: C:\\Program Files\\7-Zip\\result.zip\n\nEnter password (will not be echoed):\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e留存一個簡單的範例\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $7ZIP_EXE = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C:\\Program Files\\7-Zip\\7z.exe\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $LOG_PATH = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C:\\demo\\output\\log.txt\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $ARCHIVE_PATH = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C:\\demo\\output\\result.zip\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003e[array]\u003c/span\u003e $SOURCES = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C:\\demo\\dir1\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;C:\\demo\\dir2\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $PASS = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;123\u0026#34;\u003c/span\u003e\n\n\n\n\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e doCompression {\n    \u003cspan style=\"color:#66d9ef\"\u003eparam\u003c/span\u003e(\n        \u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $7ZIP_EXE,\n        \u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $LOG_PATH,\n        \u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $ARCHIVE_PATH,\n        \u003cspan style=\"color:#66d9ef\"\u003e[array]\u003c/span\u003e $SOURCES,\n        \u003cspan style=\"color:#66d9ef\"\u003e[string]\u003c/span\u003e $PASS\n    )\n    \n    \u003cspan style=\"color:#66d9ef\"\u003eprocess\u003c/span\u003e {\n        \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n            \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e( Test-Path $ARCHIVE_PATH ) {\n                $( Get-Date -Format \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;yyyy/MM/dd HH:mm K\u0026#34;\u003c/span\u003e ) + \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;  Target archive \u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e`\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$ARCHIVE_PATH\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e`\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e is exist, open archive to update.\u0026#34;\u003c/span\u003e | Out-File -Append $LOG_PATH\n                $result = \u0026amp; $7ZIP_EXE u -tzip $ARCHIVE_PATH $SOURCES $(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;-p\u0026#34;\u003c/span\u003e + $PASS)\n            }\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n                $( Get-Date -Format \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;yyyy/MM/dd HH:mm K\u0026#34;\u003c/span\u003e ) + \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;  Target archive \u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e`\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$ARCHIVE_PATH\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e`\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e is not exist, create new archive.\u0026#34;\u003c/span\u003e | Out-File -Append $LOG_PATH\n                $result = \u0026amp; $7ZIP_EXE a -tzip $ARCHIVE_PATH $SOURCES $(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;-p\u0026#34;\u003c/span\u003e + $PASS)\n            }\n\t\n\t        $( Get-Date -Format \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;yyyy/MM/dd HH:mm K\u0026#34;\u003c/span\u003e ) + \u003cspan style=\"color:#e6db74\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e + $result | Out-File -Append $LOG_PATH\n        }\n        \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e {\n\t        $( Get-Date -Format \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;yyyy/MM/dd HH:mm K\u0026#34;\u003c/span\u003e ) + \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;  An error has occurred.\u0026#34;\u003c/span\u003e | Out-File -Append $LOG_PATH\n        }\n    }\n}\n\n$( Get-Date -Format \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;yyyy/MM/dd HH:mm K\u0026#34;\u003c/span\u003e ) + \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;  Starting compression job.\u0026#34;\u003c/span\u003e | Out-File -Append $LOG_PATH\ndoCompression $7ZIP_EXE $LOG_PATH $ARCHIVE_PATH $SOURCES $PASS\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
    "kind": "page",
    "params": {
      "categories": [
        "Tricks"
      ],
      "date": "2021-02-02T09:36:56+08:00",
      "draft": false,
      "iscjklanguage": true,
      "lastmod": "2021-02-02T09:36:56+08:00",
      "publishdate": "2021-02-02T09:36:56+08:00",
      "tags": [
        "7-Zip",
        "PowerShell"
      ],
      "title": "使用command line操作7-Zip壓縮檔案"
    },
    "permalink": "https://mikanbearer.github.io/posts/202102020936/index.json",
    "type": "posts",
    "wordcount": 1146
  }
}
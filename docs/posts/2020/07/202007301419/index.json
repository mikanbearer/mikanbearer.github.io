



    
        
    




{
  "result": {
    "content": "\u003cp\u003eWeb Server沒定義相關的Header的話，就沒辦法Preflight Request，所以必須額外設定，使用\u003ca href=\"https://mikanbearer.github.io/myblog/posts/202007291642/\"\u003e這篇\u003c/a\u003e來實作，本篇包含Nginx及Apache的設定範例\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eNginx\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e未設定狀態：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# curl http://127.0.0.1/api -I -X OPTIONS -H \u0026quot;Origin: http://127.0.0.1:8000\u0026quot; -H \u0026quot;Access-Control-Request-Method: GET\u0026quot;\r\nHTTP/1.1 301 Moved Permanently\r\nServer: nginx/1.19.1\r\nDate: Thu, 30 Jul 2020 08:27:27 GMT\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 0\r\nConnection: keep-alive\r\nLocation: /api/\r\nX-Content-Type-Options: nosniff\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003edefault.conf範例\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eserver {\r\n    listen       80;\r\n    listen  [::]:80;\r\n    server_name  localhost;\r\n\r\n    location /api {\r\n        uwsgi_pass 172.16.238.11:8000;\r\n        include uwsgi_params;\r\n\r\n        add_header Access-Control-Allow-Origin *;\r\n        add_header Access-Control-Allow-Methods \u0026quot;POST, GET, OPTIONS\u0026quot;;\r\n        add_header Access-Control-Allow-Headers \u0026quot;Origin, Authorization, Accept\u0026quot;;\r\n        add_header Access-Control-Allow-Credentials true;\r\n    }\r\n}\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e完成後測試\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ecurl http://127.0.0.1/api -I -X OPTIONS -H \u0026quot;Origin: http://127.0.0.1:9000\u0026quot; -H \u0026quot;Access-Co\r\nntrol-Request-Method: GET\u0026quot;\r\nHTTP/1.1 301 Moved Permanently\r\nServer: nginx/1.19.1\r\nDate: Thu, 30 Jul 2020 08:34:10 GMT\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 0\r\nConnection: keep-alive\r\nLocation: /api/\r\nX-Content-Type-Options: nosniff\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: POST, GET, OPTIONS\r\nAccess-Control-Allow-Headers: Origin, Authorization, Accept\r\nAccess-Control-Allow-Credentials: true\r\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eApache\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e未設定的狀態\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# curl http://127.0.0.1:81/api/ -I -X OPTIONS -H \u0026quot;Origin: http://127.0.0.1:9000\u0026quot; -H \u0026quot;Access-Control-Request-Method: GET\u0026quot;\r\nHTTP/1.1 200 OK\r\nDate: Thu, 30 Jul 2020 07:39:22 GMT\r\nServer: Apache/2.4.43 (Unix)\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 0\r\nVary: Origin\r\nX-Frame-Options: DENY\r\nX-Content-Type-Options: nosniff\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ehttpd.conf範例(太冗長省略一些)\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eServerRoot \u0026quot;/usr/local/apache2\u0026quot;\r\nListen 80\r\n...\r\n\r\nLoadModule headers_module modules/mod_headers.so\r\n...\r\nLoadModule proxy_module modules/mod_proxy.so\r\nLoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so\r\n...\r\n\u0026lt;IfModule headers_module\u0026gt;\r\n    RequestHeader unset Proxy early\r\n    \u0026lt;Location /api\u0026gt;\r\n        Header set Access-Control-Allow-Origin \u0026quot;*\u0026quot;\r\n    \u0026lt;/Location\u0026gt;\r\n\u0026lt;IfModule headers_module\u0026gt;\r\n\u0026lt;IfModule proxy_uwsgi_module\u0026gt;\r\n    ProxyPass /api uwsgi://172.16.238.11:8000/\r\n\u0026lt;/IfModule\u0026gt;\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e完成後測試：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ curl http://127.0.0.1/api -I -X OPTIONS -H \u0026quot;Origin: http://127.0.0.1:9000\u0026quot; -H \u0026quot;Access-Control-Request-Method: GET\u0026quot;\r\nHTTP/1.1 200 OK\r\nDate: Thu, 30 Jul 2020 08:03:58 GMT\r\nServer: Apache/2.4.43 (Unix)\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 0\r\nVary: Origin\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Headers: accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with\r\nAccess-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT\r\nAccess-Control-Max-Age: 86400\r\nX-Frame-Options: DENY\r\nX-Content-Type-Options: nosniff\r\n\u003c/code\u003e\u003c/pre\u003e",
    "kind": "page",
    "params": {
      "categories": [
        "Web Development",
        "Operation"
      ],
      "date": "2020-07-30T14:19:49+08:00",
      "draft": false,
      "iscjklanguage": true,
      "lastmod": "2020-07-30T14:19:49+08:00",
      "publishdate": "2020-07-30T14:19:49+08:00",
      "tags": [
        "Apache",
        "Nginx"
      ],
      "title": "在Nginx或Apache上設定CORS"
    },
    "permalink": "https://mikanbearer.github.io/posts/2020/07/202007301419/index.json",
    "type": "posts",
    "wordcount": 388
  }
}
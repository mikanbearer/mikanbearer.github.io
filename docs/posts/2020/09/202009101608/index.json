



    
        
    




{
  "result": {
    "content": "\u003cp\u003e繼之前在架設lab的過程中被許許多多的狀況「折磨」過後，終於找到時間接續下去了，這次就來部屬\u003ca target=\"_blank\" href=\"https://github.com/arista-eosplus/ztpserver\"\u003eArista ZTP Server\u003c/a\u003e，並稍微驗證一下client與server之間的動作，以確定正常能用\n，畢竟就算是最新的1.5.0版也很久沒更新了\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(1).offsetTop, behavior: 'smooth'})\"\u003e安裝ZTPServer與DHCP Server\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(2).offsetTop, behavior: 'smooth'})\"\u003e在ENE-NG上建立vEOS Switch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(3).offsetTop, behavior: 'smooth'})\"\u003e驗證ZTPServer動作\u003c/a\u003e\n\u003cbr\u003e\u003c/br\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e這次虛擬機版本如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDebian 10\u003c/li\u003e\n\u003cli\u003eEVE-NG 2.0.3-110\u003c/li\u003e\n\u003cli\u003evEOS 4.20.15M\n\u003cbr\u003e\u003c/br\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e看一下python2版本\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ python --version\r\nPython 2.7.16\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003ch3 id=\"p-id1安裝ztpserver與dhcp-serverp\"\u003e\u003cp id=1\u003e安裝ZTPServer與DHCP Server\u003c/p\u003e\u003c/h3\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n首先用安裝必要的包\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# apt install git python-pip libyaml-dev isc-dhcp-server\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\nztpserver在安裝過程中會用pip下載所需的套件，這裡已經事先偷看過requirements.txt了\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-:requirements.txt\" data-lang=\":requirements.txt\"\u003ewebob\nroutes\npyyaml\nrequests\nsleekxmpp    # dev only\nmock         # dev only\njsonrpclib   # dev only\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n需要留意的是libyaml-dev要記得裝，否則安裝PyYAML的時候會跳出的小錯誤會很容易忽略，後續影響為何還要再觀察\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eSearching for pyyaml\nReading https://pypi.org/simple/pyyaml/\nDownloading https://files.pythonhosted.org/packages/64/c2/b80047c7ac2478f9501676c988a5411ed5572f35d1beff9cae07d321512c/PyYAML-5.3.1.tar.gz#sha256=b8eac752c5e14d3eca0e6dd9199cd627518cb5ec06add0de9d32baeee6fe645d\nBest match: PyYAML 5.3.1\nProcessing PyYAML-5.3.1.tar.gz\nWriting /tmp/easy_install-DJq89r/PyYAML-5.3.1/setup.cfg\nRunning PyYAML-5.3.1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-DJq89r/PyYAML-5.3.1/egg-dist-tmp-mJzK1J\nIn file included from ext/_yaml.c:596:\n\u003cspan style=\"display:block;width:100%;background-color:#3c3d38\"\u003eext/_yaml.h:2:10: fatal error: yaml.h: No such file or directory\n\u003c/span\u003e\u003cspan style=\"display:block;width:100%;background-color:#3c3d38\"\u003e #include \u0026lt;yaml.h\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接下來設定DHCP Server，在/etc/default/isc-dhcp-server中找到以下兩行並修改\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-:/etc/default/isc-dhcp-server\" data-lang=\":/etc/default/isc-dhcp-server\"\u003e...\r\nDHCPDv4_CONF=/etc/dhcp/dhcpd.conf\r\n...\r\nINTERFACESv4=\u0026quot;ens33\u0026quot;\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n注意listen interface，這裡是ens33\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ ip link show\r\n1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n2: ens33: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000\r\n    link/ether 00:0c:29:58:88:13 brd ff:ff:ff:ff:ff:ff\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n再來就是到/etc/dhcp/dhcpd.conf加入下列設定，這次沒用到的部分就先註解掉了\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-:/etc/dhcp/dhcpd.conf\" data-lang=\":/etc/dhcp/dhcpd.conf\"\u003e...\r\nsubnet 192.168.171.0 netmask 255.255.255.0 {\r\n  range 192.168.171.200 192.168.171.205;\r\n  option routers 192.168.171.2;\r\n  #option domain-name-servers \u0026lt;ipaddr\u0026gt;;\r\n  #option domain-name \u0026quot;\u0026lt;org\u0026gt;\u0026quot;;\r\n\r\n  # Only return the bootfile-name to Arista devices\r\n  class \u0026quot;Arista\u0026quot; {\r\n    match if substring(option vendor-class-identifier, 0, 6) = \u0026quot;Arista\u0026quot;;\r\n    # Interesting bits:\r\n    # Relay agent IP address\r\n    # Option-82: Agent Information\r\n    #     Suboption 1: Circuit ID\r\n    #       Ex: 45:74:68:65:72:6e:65:74:31 ==\u0026gt; Ethernet1\r\n    option bootfile-name \u0026quot;http://192.168.171.127:8080/bootstrap\u0026quot;;\r\n  }\r\n}\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDHCP Server告一段落了\n\u003cbr\u003e\u003c/br\u003e\n接下來是ztpserver，如果用pip的話會比較快速\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ pip install ztpserver\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n但這裡貪圖git裡面的各種設定及範本，所以還是用git clone的方式\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ git\r\n$ git clone https://github.com/arista-eosplus/ztpserver.git\r\n$ cd ztpserver/\r\n$ python setup.py build\r\n$ python setup.py install\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cp\u003e安裝完成就可以啟動了\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eztps\r\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"p-id2在ene-ng上建立veos-switchp\"\u003e\u003cp id=2\u003e在ENE-NG上建立vEOS Switch\u003c/p\u003e\u003c/h3\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接著準備client，使用EVE，開起web console後就建立一個node\n\u003cimg src=\"1.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\ntemplate選擇Arista，vEOS版本選擇4.20.15M，這是個人測試問題最少的幾個版本中最新的\n\u003cimg src=\"2.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n建立network\n\u003cimg src=\"3.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n選擇Cloud0，讓EVE內的QEMU虛擬機能出HOST\n\u003cimg src=\"4.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n接下來從node那裏把線拉上network\n\u003cimg src=\"6.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n選擇node的managent 1來作為管理之用是理所當然的吧？\n\u003cimg src=\"7.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n完成後就可以開機了\n\u003cimg src=\"8.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003ch3 id=\"p-id3使用static-provisioning驗證ztpserver動作p\"\u003e\u003cp id=3\u003e使用Static Provisioning驗證ZTPServer動作\u003c/p\u003e\u003c/h3\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接下來終於要進入正題了，首先打開switch的console，預設user是admin，無密碼，先來收集我們要的資料\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003elocalhost\u0026gt;show zerotouch \nZeroTouch Mode: Disabled\nScript Exec Timeout: 900\n\n\nlocalhost\u0026gt;show version\nArista vEOS\nHardware version:    \nSerial number:       \n\u003cspan style=\"display:block;width:100%;background-color:#3c3d38\"\u003eSystem MAC address:  5000.00d7.ee0b\n\u003c/span\u003e\nSoftware image version: 4.20.15M\nArchitecture:           i386\nInternal build version: 4.20.15M-13793783.42015M\nInternal build ID:      93912965-5173-490d-8662-ecb360cf75a0\n\nUptime:                 0 weeks, 0 days, 0 hours and 2 minutes\nTotal memory:           2016840 kB\nFree memory:            1397076 kB\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ezerotouch預設是disable的，EOS的機制是當startup-config為空，才會啟動agent，這裡先記下system mac address\n\u003cbr\u003e\u003c/br\u003e\n接下來就把start-config刪了吧\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003elocalhost\u0026gt; enable\r\nlocalhost# write erase\r\nProceed with erasing startup configuration? [confirm] y\r\nlocalhost# reload\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n開好機就會看到agent在動了\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003elocalhost login: Sep 10 15:24:03 localhost ConfigAgent: %ZTP-6-DHCPv4_QUERY: Sending DHCPv4 request on  [ Ethernet1, Ethernet2, Ethernet3, Ethernet4, Ethernet5, Ethernet6, Ethernet7, Ethernet8, Management1 ]\r\nSep 10 15:24:05 localhost ConfigAgent: %ZTP-6-DHCPv4_SUCCESS: DHCPv4 response received on Management1  [ Ip Address: 192.168.171.200/24/24; Domain: example.org; Gateway: 192.168.171.2; Boot File: http://192.168.171.127:8080/bootstrap ]\r\nSep 10 15:24:10 localhost ConfigAgent: %ZTP-6-CONFIG_DOWNLOAD: Attempting to download the startup-config from http://192.168.171.127:8080/bootstrap\r\nSep 10 15:24:10 localhost ConfigAgent: %ZTP-4-CONFIG_DOWNLOAD_FAIL: Failed to download the startup-config from http://192.168.171.127:8080/bootstrap. Error: Couldn't connect to server\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\nzerotouch也變成active\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003elocalhost\u0026gt;show zerotouch \r\n\r\nZeroTouch Mode: Active\r\nScript Exec Timeout: 900\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接下來準備設定ZTPServer，找到這行，改成systemmac，這個設定是從agent的request header帶的值選擇去存取哪個目錄的資源，虛擬機沒serial number所以用mac\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-:/etc/ztpserver/ztpserver.conf\" data-lang=\":/etc/ztpserver/ztpserver.conf\"\u003e...\r\nidentifier = systemmac\r\n...\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\nZTPServer預設的資源目錄是/usr/share/ztpserver，接下來就來建立給client用的資源\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# cd /usr/share/ztpserver/nodes/\r\n# mkdir 500000d7ee0b\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n這是測試用的startup-config，如果成功的話，agent會把這個檔案寫進flash\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-:500000d7ee0b/startup-config\" data-lang=\":500000d7ee0b/startup-config\"\u003e!\r\nhostname test-node-1\r\n!\r\nusername admin privilege 15 role network-admin secret admin\r\n!\r\ninterface Management1\r\n ip address 192.168.171.210/24\r\n!\r\nip access-list open\r\n 10 permit ip any any\r\n!\r\nip route 0.0.0.0/0 192.168.171.2\r\n!\r\nip routing\r\n!\r\nmanagement api http-commands\r\n no shutdown\r\n!\r\nbanner login\r\nWelcome to $(hostname)!\r\nThis switch has been provisioned using the ZTPServer from Arista Networks\r\nDocs: http://ztpserver.readthedocs.org/\r\nSource Code: https://github.com/arista-eosplus/ztpserver\r\nEOF\r\n!\r\nend\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n再來是pattern，這是用來檢查topology用的檔案，如果不符合的話就無法存取到bootstrap file，若照\u003ca target=\"_blank\" href=\"https://ztpserver.readthedocs.io/en/master/cookbook/staticNodes.html#create-a-pattern-topology-validation-enabled\"\u003e官方文件\u003c/a\u003e裡的範例是有LLDP的話是使用any: any:any，但這裡沒LLDP所以用none，否則interface會被判定不符合\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-:500000d7ee0b/pattern\" data-lang=\":500000d7ee0b/pattern\"\u003e---\r\nname: static_node\r\ninterfaces:\r\n  - none: none:none\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n完成之後就可以再次啟動\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ ztps\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n可以看到switch上有startup-config，且和剛才建立的一模一樣，這樣的就能確定ZTPServer可以用啦\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\r\nlocalhost#show startup-config \r\n! Command: show startup-config\r\n!\r\nhostname test-node-1\r\n!\r\nusername admin privilege 15 role network-admin secret admin\r\n!\r\ninterface Management1\r\n ip address 192.168.171.210/24\r\n!\r\nip access-list open\r\n 10 permit ip any any\r\n!\r\nip route 0.0.0.0/0 192.168.171.2\r\n!\r\nip routing\r\n!\r\nmanagement api http-commands\r\n no shutdown\r\n!\r\nbanner login\r\nWelcome to $(hostname)!\r\nThis switch has been provisioned using the ZTPServer from Arista Networks\r\nDocs: http://ztpserver.readthedocs.org/\r\nSource Code: https://github.com/arista-eosplus/ztpserver\r\nEOF\r\n!\r\nend\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e之後有時間再做詳細一點的練習\u003c/p\u003e",
    "kind": "page",
    "params": {
      "categories": [
        "Arista",
        "Provisioning"
      ],
      "date": "2020-09-10T16:08:09+08:00",
      "draft": false,
      "iscjklanguage": true,
      "lastmod": "2020-09-10T16:08:09+08:00",
      "publishdate": "2020-09-10T16:08:09+08:00",
      "tags": [
        "EVE-NG",
        "vEOS",
        "ZTPServer"
      ],
      "title": "安裝並嘗試使用Arista ZTPServer"
    },
    "permalink": "https://mikanbearer.github.io/posts/2020/09/202009101608/index.json",
    "type": "posts",
    "wordcount": 1872
  }
}
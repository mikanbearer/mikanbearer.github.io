



    
        
    




{
  "result": {
    "content": "\u003cp\u003ePrometheus在設計上是採用pull的模式，但在網路架構的規劃上，並不是所有的target能讓Prometheus去pull，這時候就是Pushgateway出馬的時候了\u003c/p\u003e\n\u003cp\u003ePushgateway顧名思義，能讓所需要監控的設備及服務用push的方式將metrics放在Pushgateway，再讓Prometheus來pull\u003c/p\u003e\n\u003cp\u003e如下圖所示：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"0.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n接下來就試著做一遍了\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(1).offsetTop, behavior: 'smooth'})\"\u003e下載並執行Pushgateway\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(2).offsetTop, behavior: 'smooth'})\"\u003e使用Pushgateway API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca onclick=\"window.scrollTo({top: document.getElementById(3).offsetTop, behavior: 'smooth'})\"\u003e從Pushgateway取得metrics\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=1\u003e下載並執行Pushgateway\u003c/h3\u003e\r\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n直接在github上就能下載到，檔案不大十分快速，解開來一樣是binary file\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ wget https://github.com/prometheus/pushgateway/releases/download/v1.2.0/pushgateway-1.2.0.linux-amd64.tar.gz\r\n$ tar zxvf pushgateway-1.2.0.linux-amd64.tar.gz\r\n$ cd pushgateway-1.2.0.linux-amd64.tar.gz\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n執行和exporter差不多，一樣用\u0026ndash;web.listen-address來決定listen address及port，\u0026ndash;persistence.file pg_file能指定一個暫存用的檔案，以防重新啟動時丟失當前的metrics\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ ./pushgateway --web.listen-address 0.0.0.0:9091 --persistence.file pg_file\r\nlevel=info ts=2020-08-18T07:04:00.332Z caller=main.go:83 msg=\u0026quot;starting pushgateway\u0026quot; version=\u0026quot;(version=1.2.0, branch=HEAD, revision=b7e0167e9574f4f88404dde9653ee1d3c940f2eb)\u0026quot;\r\nlevel=info ts=2020-08-18T07:04:00.332Z caller=main.go:84 build_context=\u0026quot;(go=go1.13.8, user=root@0e823ccfff84, date=20200311-18:51:01\u0026quot;\r\nlevel=info ts=2020-08-18T07:04:00.334Z caller=main.go:137 listen_address=0.0.0.0:9091\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接下來就能簡單pull測試一下metrics了\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ curl 0.0.0.0:9091/metrics\r\n...\r\n# HELP pushgateway_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which pushgateway was built.\r\n# TYPE pushgateway_build_info gauge\r\npushgateway_build_info{branch=\u0026quot;HEAD\u0026quot;,goversion=\u0026quot;go1.13.8\u0026quot;,revision=\u0026quot;b7e0167e9574f4f88404dde9653ee1d3c940f2eb\u0026quot;,version=\u0026quot;1.2.0\u0026quot;} 1\r\n# HELP pushgateway_http_requests_total Total HTTP requests processed by the Pushgateway, excluding scrapes.\r\n# TYPE pushgateway_http_requests_total counter\r\npushgateway_http_requests_total{code=\u0026quot;200\u0026quot;,handler=\u0026quot;status\u0026quot;,method=\u0026quot;get\u0026quot;} 1\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n也能用從web查看，因為現在沒東西push，所以是空空如也\n\u003cimg src=\"1.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=2\u003e使用Pushgateway API\u003c/h3\u003e\r\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n現在來嘗試push metrics\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ cat \u0026lt;\u0026lt;EOF | curl --data-binary @- http://127.0.0.1:9091/metrics/job/some_job/instance/some_instance\r\n# TYPE some_metric counter\r\nsome_metric{label=\u0026quot;val1\u0026quot;} 42\r\n# TYPE another_metric gauge\r\n# HELP another_metric Just an example.\r\nanother_metric 2398.283\r\nEOF\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n嫌指令長也能使用@file name的方式POST檔案\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ curl --data-binary @teest.prom http://127.0.0.1:9091/metrics/job/some_job/instance/some_\r\ninstance\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n當然除了POST，也能使用DELETE刪除指定的instance\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ curl -X DELETE http://127.0.0.1:9091/metrics/job/some_job/instance/some_instance\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n也可以用PUT來覆蓋\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e curl -X PUT  --data-binary @teest.prom http://127.0.0.1:9091/metrics/job/some_job/instance/some_instance\r\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\nWeb也能看到剛才push的metrics\n\u003cimg src=\"2.png\" alt=\"\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=3\u003e從Pushgateway取得metrics\u003c/h3\u003e\r\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n雖然能用file-based sd，但這次就偷懶一下用static config了，畢竟只是想演示一遍\u003c/p\u003e\n\u003cp\u003e只要在prometheus.yml的target指定Pushgateway\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e30\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e31\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e32\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e33\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e34\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e35\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e36\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-:prometheus.yml\" data-lang=\":prometheus.yml\"\u003e...\n\n  - \u003cspan style=\"color:#f92672\"\u003ejob_name\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;pushgateway\u0026#39;\u003c/span\u003e\n    \u003cspan style=\"color:#f92672\"\u003estatic_configs\u003c/span\u003e:\n    - \u003cspan style=\"color:#f92672\"\u003etargets\u003c/span\u003e: [\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;127.0.0.1:9091\u0026#39;\u003c/span\u003e]\n      \u003cspan style=\"color:#f92672\"\u003elabels\u003c/span\u003e:\n        \u003cspan style=\"color:#f92672\"\u003einstance\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epushgateway\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003cbr\u003e\u003c/br\u003e\n接下來就能看到endpoint多了Pushgateway\n\u003cimg src=\"3.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n也可以query了\n\u003cimg src=\"4.png\" alt=\"\"\u003e\n\u003cbr\u003e\u003c/br\u003e\n完\u003c/p\u003e",
    "kind": "page",
    "params": {
      "categories": [
        "Monitoring"
      ],
      "date": "2020-08-14T09:13:49+08:00",
      "draft": false,
      "iscjklanguage": true,
      "lastmod": "2020-08-14T09:13:49+08:00",
      "publishdate": "2020-08-14T09:13:49+08:00",
      "tags": [
        "Prometheus"
      ],
      "title": "【Prometheus入門練習-基本操作篇2】使用Pushgateway進行監控"
    },
    "permalink": "https://mikanbearer.github.io/posts/2020/08/202008140913/index.json",
    "type": "posts",
    "wordcount": 867
  }
}
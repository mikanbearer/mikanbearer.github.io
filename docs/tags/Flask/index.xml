<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on 活到老學到死</title>
    <link>https://mikanbearer.github.io/tags/Flask/</link>
    <description>Recent content in Flask on 活到老學到死</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>youremail@domain.com (Zhang San)</managingEditor>
    <webMaster>youremail@domain.com (Zhang San)</webMaster>
    <lastBuildDate>Tue, 15 Sep 2020 10:49:11 +0800</lastBuildDate>
    
	<atom:link href="https://mikanbearer.github.io/tags/Flask/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Flask入門練習-CRUD篇4】使用Flask-WTF導入CSRF Protection</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009151049/</link>
      <pubDate>Tue, 15 Sep 2020 10:49:11 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009151049/</guid>
      <description>&lt;p&gt;暫定是最後一個入門練習，這次使用Flask-WTF來做CSRF Protection，Flask-WTF是WTForms結合Flask用的module&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Flask入門練習-CRUD篇3】使用Flask-Login實作登入畫面</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009141257/</link>
      <pubDate>Mon, 14 Sep 2020 12:57:20 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009141257/</guid>
      <description>&lt;p&gt;這次實作目標是導入Flask-Login，讓咱們的app受驗證機制保護&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Flask入門練習-CRUD篇2】製作簡單的CRUD</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009111635/</link>
      <pubDate>Fri, 11 Sep 2020 16:35:19 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009111635/</guid>
      <description>&lt;p&gt;經過了前面的練習，咱們的小App已經有了ORM，既然有了ORM，不做成CRUD(Create、Read、Update、Delete)怎麼行？&lt;/p&gt;
&lt;p&gt;所以繼續動手做&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Flask入門練習-CRUD篇1】在Flask中導入ORM操作</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008271612/</link>
      <pubDate>Thu, 27 Aug 2020 16:12:20 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008271612/</guid>
      <description>&lt;p&gt;Flask本身沒自帶ORM對製作CRUD而言是略為麻煩，這裡就使用SQLAlchemy來操作資料庫，剛好有個&lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/2.x/&#34;&gt;Flask-SQLAlchemy&lt;/a&gt;可使用，大大縮短coding時間&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從今天開始學Flask</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008191354/</link>
      <pubDate>Wed, 19 Aug 2020 13:54:41 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008191354/</guid>
      <description>&lt;p&gt;以往用的framework都是Django，但總不可能靠一招就打天下…所以便來轉戰Flask了，畢竟在某些情境下，使用這種輕量化的framework會更合適&lt;/p&gt;
&lt;p&gt;和Django不同，Flask不像Django這麼複雜，預設也只有最低限度的功能，也不像Django自帶ORM，
因此是個自由度相當高的framework，接下來就開始動手練習&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RabbitMQ on 活到老學到死</title>
    <link>https://mikanbearer.github.io/tags/RabbitMQ/</link>
    <description>Recent content in RabbitMQ on 活到老學到死</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>youremail@domain.com (Zhang San)</managingEditor>
    <webMaster>youremail@domain.com (Zhang San)</webMaster>
    <lastBuildDate>Tue, 18 Aug 2020 16:09:08 +0800</lastBuildDate>
    
	<atom:link href="https://mikanbearer.github.io/tags/RabbitMQ/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Prometheus入門練習-基本操作篇3】使用Prometheus監控RabbitMQ</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008181609/</link>
      <pubDate>Tue, 18 Aug 2020 16:09:08 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008181609/</guid>
      <description>&lt;p&gt;想特地找個一個有自帶plugin的軟體練習一下幫助記憶，剛剛好是常常使用RabbitMQ！這次就來測試看看，當作實務運用的練習&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Django &#43; Channels部屬WebSocket簡易聊天室</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008100108/</link>
      <pubDate>Mon, 10 Aug 2020 01:08:04 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008100108/</guid>
      <description>&lt;p&gt;製作一個網頁聊天室，首先要讓服務端和用戶端實現異步通訊，而服務端要包含一個訊息貯列，讓所有符合條件的用戶端都能收到相應的訊息，
剛好可作為Message Queue及Web Socket的練習。&lt;/p&gt;
&lt;p&gt;本篇Message Queue使用RabbitMQ，Framework使用Django，並且由Channels來實現Web Socket&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Django &#43; Celery進行異步處理</title>
      <link>https://mikanbearer.github.io/posts/2020/07/202007221111/</link>
      <pubDate>Wed, 22 Jul 2020 11:11:37 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/07/202007221111/</guid>
      <description>&lt;p&gt;本篇旨在project中增加異步執行的功能，增進使用者體驗，避免東西沒跑完response等了老半天等不到的窘境，
目前只提供簡單的範例，不包含異步任務的情境應用&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
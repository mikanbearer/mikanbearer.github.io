<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>運維管理 on 活到老學到死</title>
    <link>https://mikanbearer.github.io/categories/%E9%81%8B%E7%B6%AD%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 運維管理 on 活到老學到死</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>youremail@domain.com (Zhang San)</managingEditor>
    <webMaster>youremail@domain.com (Zhang San)</webMaster>
    <lastBuildDate>Thu, 10 Sep 2020 16:08:09 +0800</lastBuildDate>
    
	<atom:link href="https://mikanbearer.github.io/categories/%E9%81%8B%E7%B6%AD%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>安裝並嘗試使用Arista ZTPServer</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009101608/</link>
      <pubDate>Thu, 10 Sep 2020 16:08:09 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009101608/</guid>
      <description>&lt;p&gt;繼之前在架設lab的過程中被許許多多的狀況「折磨」過後(參照&lt;a href=&#34;https://mikanbearer.github.io/posts/202007241554/&#34;&gt;這裡&lt;/a&gt;)，終於找到時間接續下去了，這次就來部屬&lt;a href=&#34;https://github.com/arista-eosplus/ztpserver&#34;&gt;Arista ZTPServer&lt;/a&gt;，並稍微驗證一下client與server之間的動作，以確定正常能用
，畢竟就算是最新的1.5.0版也很久沒更新了&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Ansible部屬Docker Swarm</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009031456/</link>
      <pubDate>Thu, 03 Sep 2020 14:56:05 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009031456/</guid>
      <description>&lt;p&gt;偶然看到這個&lt;a href=&#34;https://github.com/atosatto/ansible-dockerswarm&#34;&gt;Ansible Role: Docker&lt;/a&gt;就想嘗試一下，用得順的話就能輕鬆部屬swarm cluster了，所以試著操作一遍&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從今天開始學Ansible</title>
      <link>https://mikanbearer.github.io/posts/2020/09/202009011649/</link>
      <pubDate>Tue, 01 Sep 2020 16:49:15 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/09/202009011649/</guid>
      <description>&lt;p&gt;雖然久仰Ansible大名，但總是停留在紙上談兵的階段，這次就先練習一遍，熟悉點再來自己寫role&lt;/p&gt;
&lt;p&gt;參考文件：&lt;a href=&#34;https://docs.ansible.com/&#34;&gt;https://docs.ansible.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Prometheus入門練習-自訂篇2】將Prometheus API取得的資料搭配Vue.js製作Echarts動態圖表</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008241004/</link>
      <pubDate>Mon, 24 Aug 2020 10:04:45 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008241004/</guid>
      <description>&lt;p&gt;要是不想用自帶的UI，也不想用Grafana怎麼辦！！那當然就是自己動手做啦，自己動手做的好處就是能整合其他功能做成多合一的Web app，但這次就先練習如何取用Prometheus上的資料，製作成動態圖表&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Prometheus入門練習-基本操作篇3】使用Prometheus監控RabbitMQ</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008181609/</link>
      <pubDate>Tue, 18 Aug 2020 16:09:08 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008181609/</guid>
      <description>&lt;p&gt;想特地找個一個有自帶plugin的軟體練習一下幫助記憶，剛剛好是常常使用RabbitMQ！這次就來測試看看，當作實務運用的練習&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Prometheus入門練習-自訂篇1】使用Prometheus client library自訂metrics</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008171709/</link>
      <pubDate>Mon, 17 Aug 2020 17:09:27 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008171709/</guid>
      <description>&lt;p&gt;作為往後可能需要自訂Exporter的預習，就試著拿&lt;a href=&#34;https://prometheus.io/docs/instrumenting/clientlibs/&#34;&gt;Prometheus client library&lt;/a&gt;來玩玩…這次使用官方提供的Python版本，藉由這次練習來更加熟練操作Exporter&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Prometheus入門練習-基本操作篇2】使用Pushgateway進行監控</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008140913/</link>
      <pubDate>Fri, 14 Aug 2020 09:13:49 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008140913/</guid>
      <description>&lt;p&gt;Prometheus在設計上是採用pull的模式，但在網路架構的規劃上，並不是所有的target能讓Prometheus去pull，這時候就是Pushgateway出馬的時候了&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Prometheus入門練習-基本操作篇1】從零開始學Prometheus</title>
      <link>https://mikanbearer.github.io/posts/2020/08/202008131707/</link>
      <pubDate>Thu, 13 Aug 2020 17:07:15 +0800</pubDate>
      <author>youremail@domain.com (Zhang San)</author>
      <guid>https://mikanbearer.github.io/posts/2020/08/202008131707/</guid>
      <description>&lt;p&gt;Prometheus是最近非常流行的Pull-based monitoring，主要的角色是以下兩者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prometheus：監控方，定期收集資料並存在資料庫&lt;/li&gt;
&lt;li&gt;Exporter：被監控方，回傳監控方需要的資料&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;為了往後學習方便，先來實作一遍這個方便利用的工具&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>